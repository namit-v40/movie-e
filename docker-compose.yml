version: "3"

services:
  app:
    build:
      context: .
      dockerfile: ./.infra/php/Dockerfile.php
    container_name: movie_e_php
    hostname: movie_e_php
    volumes:
      - ./src:/app
      - ./.infra/php/php.ini:/usr/local/etc/php/php.ini
    working_dir: /app
    entrypoint: []
    networks:
      - movie_e_network

  nginx:
    build:
      context: .
      dockerfile: ./.infra/nginx/Dockerfile
    container_name: movie_e_nginx
    hostname: movie_e_nginx
    volumes:
      - ./src:/app
      - ./.infra/nginx/php.conf.template:/etc/nginx/templates/default.conf.template
    working_dir: /app/public
    environment:
      - PHP_HOST=movie_e_php
    ports:
      - 80:80
    depends_on:
      - app
    entrypoint: [ "/bin/sh", "-c", "envsubst '$$PHP_HOST' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'" ]
    networks:
      - movie_e_network

  movie_mysql:
    image: mysql:8.0
    container_name: movie_e_mysql
    hostname: movie_e_mysql
    volumes:
      - movie_e_db:/var/lib/mysql
      - ./.infra/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - 3384:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=movie_e
    networks:
      - movie_e_network
  
  redis:
    image: redis:latest
    container_name: movie_e_redis
    hostname: movie_e_redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - movie_e_network

  mailpit:
    image: axllent/mailpit:latest
    container_name: movie_e_mailpit
    hostname: movie_e_mailpit
    ports:
      - 1025:1025
      - 8025:8025
    volumes:
      - mailpit_data:/data/db
    networks:
      - movie_e_network
  
  minio:
    image: minio/minio:latest
    container_name: movie_e_minio
    hostname: movie_e_minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    networks:
      - movie_e_network

  soketi:
    image: quay.io/soketi/soketi:latest
    container_name: movie_e_soketi
    hostname: movie_e_soketi
    ports:
      - "6001:6001"
    environment:
      SOKETI_DEBUG: "1"
      SOKETI_METRICS_SERVER: "true"
      SOKETI_DEFAULT_APP_ID: ${SOKETI_DEFAULT_APP_ID}
      SOKETI_DEFAULT_APP_KEY: ${SOKETI_DEFAULT_APP_KEY}
      SOKETI_DEFAULT_APP_SECRET: ${SOKETI_DEFAULT_APP_SECRET}
      SOKETI_DEFAULT_APP_MAX_CONNECTIONS: 1000
    networks:
      - movie_e_network

volumes:
  movie_e_db:
    name: movie_e_db
  mailpit_data:
    name: movie_e_mailpit
  redis_data:
    name: movie_e_redis
  minio_data:
    name: movie_e_minio

networks:
  movie_e_network:
    name: movie_e_network
    driver: bridge
